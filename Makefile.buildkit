# Copyright 2020 Authors of Cilium
# SPDX-License-Identifier: Apache-2.0

DOCKER_BUILDER := default

# Export with value expected by docker
export DOCKER_BUILDKIT=1

# Build with docker buildx
CONTAINER_ENGINE := docker buildx

# Docker Buildx support. If DOCKER_BUILDX is defined, a builder instance 'cross'
# on the local node is configured for amd64 and arm64 platform targets. Otherwise build on the current (typically default) builder.
ifdef DOCKER_BUILDX
  DOCKER_PLATFORMS := linux/arm64,linux/amd64
  DOCKER_FLAGS += --push --platform $(DOCKER_PLATFORMS)
  DOCKER_BUILDER := $(shell docker buildx ls | grep -E -e "[a-zA-Z0-9-]+ \*" | cut -d ' ' -f1)
  ifeq ($(DOCKER_BUILDER),default)
    BUILDER_SETUP := $(shell docker buildx rm cross || true && docker buildx create --name cross --platform $(DOCKER_PLATFORMS) --use)
    DOCKER_BUILDER := $(shell docker buildx ls | grep -E -e "[a-zA-Z0-9-]+ \*" | cut -d ' ' -f1)
  endif
else
  DOCKER_FLAGS += --load
endif

.PHONY: builder-info
builder-info:
	@echo "Using Docker Buildx builder \"$(DOCKER_BUILDER)\" with build flags \"$(DOCKER_FLAGS)\"."

# Generic rule for augmented .dockerignore files.
GIT_IGNORE_FILES := $(shell find . -not -path "./vendor*" -name .gitignore -print)
.PRECIOUS: %.dockerignore
%.dockerignore: $(GIT_IGNORE_FILES) Makefile.buildkit
	@-mkdir -p $(dir $@)
	@echo "/hack" > $@
	@echo ".git" >> $@
	echo $(dir $(GIT_IGNORE_FILES)) | tr ' ' '\n' | xargs -P1 -n1 -I {DIR} sed \
		-e '# Remove lines with white space, comments and files that must be passed to docker, "$$" due to make. #' \
			-e '/^[[:space:]]*$$/d' -e '/^#/d' -e '/GIT_VERSION/d' \
		-e '# Apply pattern in all directories if it contains no "/", keep "!" up front. #' \
			-e '/^[^!/][^/]*$$/s<^<**/<' -e '/^![^/]*$$/s<^!<!**/<' \
		-e '# Prepend with the directory name, keep "!" up front. #' \
			-e '/^[^!]/s<^<{DIR}<' -e '/^!/s<^!<!{DIR}<'\
		-e '# Remove leading "./", keep "!" up front. #' \
			-e 's<^\./<<' -e 's<^!\./<!<' \
		-e '# Append newline to the last line if missing. GNU sed does not do this automatically. #' \
			-e '$$a\' \
		{DIR}.gitignore >> $@
